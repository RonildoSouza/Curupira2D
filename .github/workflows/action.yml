name: Create Release MonoGame.Helper

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - name: Checkout under $GITHUB_WORKSPACE
      id: checkout
      uses: actions/checkout@v2
    
    - name: Compress MonoGame.Helper.dll
      uses: montudor/action-zip@v0.1.0
      with:
        args: zip -qq -r ./dist/MonoGame.Helper.zip ./dist/MonoGame.Helper.dll
        
    - name: Compress MonoGame.Helper.Physic.dll
      uses: montudor/action-zip@v0.1.0
      with:
        args: zip -qq -r ./dist/MonoGame.Helper.Physic.zip ./dist/MonoGame.Helper.Physic.dll
        
    - name: Create a Release
      id: create_release
      uses: actions/create-release@v1.1.1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
        
    - name: Upload a Release Asset - MonoGame.Helper
      id: upload-release-asset-mh
      uses: actions/upload-release-asset@v1.0.2
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./dist/MonoGame.Helper.zip
        asset_name: MonoGame.Helper.zip
        asset_content_type: application/zip  
        
    - name: Upload a Release Asset - MonoGame.Helper.Physic
      id: upload-release-asset-mhp 
      uses: actions/upload-release-asset@v1.0.2
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./dist/MonoGame.Helper.Physic.zip
        asset_name: MonoGame.Helper.Physic.zip
        asset_content_type: application/zip
